{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","CardList","map","monster","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUACaA,EAAO,SAACC,GAChB,OACG,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACtB,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,YCJlBC,G,MAAW,SAACR,GACrB,OAAS,qBAAMC,UAAU,YAAhB,SACND,EAAMI,SAASK,KAAI,SAAAC,GAAO,OACvB,cAAC,EAAD,CAAyBN,SAAUM,GAAtBA,EAAQL,WCHlBM,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aACpC,OAAQ,uBACPZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsDCG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAWFH,aAAe,SAAAI,GACb,OAAO,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAX5C,EAAKC,MAAQ,CACXlB,SAAU,GACVe,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACd,SAASuB,S,oBAM9H,WAAU,IAAD,EACyBC,KAAKN,MAA9BlB,EADA,EACAA,SAAUe,EADV,EACUA,YACXU,EAAmBzB,EAAS0B,QAAO,SAAApB,GAAO,OAAIA,EAAQJ,KAAKyB,cAAcC,SAASb,EAAYY,kBAElG,OACF,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAce,KAAKf,eAEnB,cAAC,EAAD,CAAUT,SAAUyB,W,GA3BRI,aCdHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ab7d07b.chunk.js","sourcesContent":["import './card.style.css'\nexport const Card = (props) => {\n     return (\n        <div className=\"card-container\">\n            <img alt=\"monster\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}/>\n            <h2>{props.monsters.name}</h2>\n            <p>{props.monsters.email}</p>\n        </div>\n        )\n}","import { Card } from '../card/card.component';\nimport './card-list.style.css'\nexport const CardList = (props) => {\n    return ( < div className=\"card-list\">\n      {props.monsters.map(monster => (\n          <Card key = {monster.id} monsters={monster}/>\n      ))}\n        </div>)\n}","import './search-box.styles.css'\n\nexport const SearchBox = ({placeholder,handleChange}) => {\n   return  <input \n    className=\"search\"\n    type=\"search\" \n    placeholder={placeholder}\n    onChange={handleChange}\n    />\n}","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n  }\n  componentDidMount() {\n    fetch(`https://jsonplaceholder.typicode.com/users`).then(response => response.json()).then(users => this.setState({monsters:users}))\n  }\n\n  handleChange = e => {\n    return this.setState({searchField: e.target.value});\n  }\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n      return (\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n      placeholder=\"Search monsters\"\n      handleChange={this.handleChange}\n      />\n      <CardList monsters={filteredMonsters}>\n     \n      </CardList>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}